{"pageProps":{"note":{"id":"9s0k02hxv78c6mijo6sfbhi","title":"Docker","desc":"","updated":1669678839211,"created":1669248714966,"custom":{},"fname":"computer.docker","type":"note","vault":{"fsPath":".","selfContained":true,"name":"dendron-note"},"contentHash":"55afd07d2b8c4db9c9ce32d9fb824ad5","links":[],"anchors":{"dockerinstall":{"type":"header","text":"docker install","value":"dockerinstall","line":9,"column":0,"depth":2},"dockerstart":{"type":"header","text":"docker start","value":"dockerstart","line":17,"column":0,"depth":2},"设置国内源":{"type":"header","text":"设置国内源","value":"设置国内源","line":32,"column":0,"depth":2},"dockerimage":{"type":"header","text":"docker image","value":"dockerimage","line":61,"column":0,"depth":2},"dockercontainer":{"type":"header","text":"docker container","value":"dockercontainer","line":76,"column":0,"depth":2},"运行容器":{"type":"header","text":"运行容器","value":"运行容器","line":80,"column":0,"depth":4},"镜像导出导入":{"type":"header","text":"镜像导出导入","value":"镜像导出导入","line":108,"column":0,"depth":3},"参考":{"type":"header","text":"参考","value":"参考","line":120,"column":0,"depth":2}},"children":[],"parent":"u92paxy6iqch8vik9v6f4gm","data":{}},"body":"<h1 id=\"docker\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#docker\"></a>Docker</h1>\n<h2 id=\"dockerinstall\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dockerinstall\"></a>docker install</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman -Ss <span class=\"token function\">docker</span> \n</code></pre>\n<h2 id=\"dockerstart\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dockerstart\"></a>docker start</h2>\n<p>启动</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl  start <span class=\"token function\">docker</span>\n</code></pre>\n<p>把用户加入docker用户组，无需每次输入sudo</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> -aG <span class=\"token function\">docker</span> <span class=\"token environment constant\">$USER</span>\n<span class=\"token comment\"># 需要 logout 重新登录</span>\n</code></pre>\n<h2 id=\"设置国内源\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#设置国内源\"></a>设置国内源</h2>\n<p>新建或编辑daemon.json</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> /etc/docker/daemon.json\n</code></pre>\n<p>在daemon.json中编辑如下</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\n <span class=\"token property\">\"registry-mirrors\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://hub-mirror.c.163.com\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>国内源</p>\n<pre><code>网易\nhttp://hub-mirror.c.163.com\nDocker中国区官方镜像\nhttps://registry.docker-cn.com\n中国科技大学\nhttps://docker.mirrors.ustc.edu.cn\n</code></pre>\n<h2 id=\"dockerimage\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dockerimage\"></a>docker image</h2>\n<p>文件生成的容器实例，本身也是一个文件，称为容器文件。也就是说，一旦容器生成，就会同时存在两个文件： image 文件和容器文件。而且关闭容器并不会删除容器文件，只是容器停止运行而已。把应用程序及其依赖，打包在 image 文件里面。只有通过这个文件，才能生成 Docker 容器。image 文件可以看作是容器的模板。Docker 根据 image 文件生成容器的实例。同一个 image 文件，可以生成多个同时运行的容器实例。</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 列出本机的所有 image 文件。</span>\n<span class=\"token function\">docker</span> image <span class=\"token function\">ls</span>\n<span class=\"token comment\"># 删除 image 文件</span>\n<span class=\"token function\">docker</span> image <span class=\"token function\">rm</span> <span class=\"token punctuation\">[</span>imageName<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#搜索 镜像</span>\n<span class=\"token function\">docker</span> search <span class=\"token punctuation\">[</span>imageName<span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 拉取 image 文件</span>\n<span class=\"token function\">docker</span> image pull <span class=\"token punctuation\">[</span>imageName<span class=\"token punctuation\">]</span>\n</code></pre>\n<h2 id=\"dockercontainer\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dockercontainer\"></a>docker container</h2>\n<h4 id=\"运行容器\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#运行容器\"></a>运行容器</h4>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> container run ubuntu /bin/bash\n<span class=\"token comment\"># 参数</span>\n-i: 交互式操作。\n-t: 终端。\n-d: 后台运行，需要通过exec进入容器\n-p: 如 <span class=\"token number\">8000</span>:3000 容器的3000映射到本机的8000端口，默认是tcp，后面添加/udp绑定udp端口\n\n\n\n<span class=\"token comment\">#进入运行中的容器</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> -it <span class=\"token punctuation\">[</span>containerId<span class=\"token punctuation\">]</span> /bin/bash  \n\n<span class=\"token comment\"># 列出本机正在运行的容器</span>\n<span class=\"token function\">docker</span> container <span class=\"token function\">ls</span>\n<span class=\"token function\">docker</span> <span class=\"token function\">ps</span> -a \n<span class=\"token comment\"># 列出本机所有容器，包括终止运行的容器</span>\n<span class=\"token function\">docker</span> container <span class=\"token function\">ls</span> --all\n<span class=\"token comment\"># 启动/停止 容器</span>\n<span class=\"token function\">docker</span> start/stop <span class=\"token punctuation\">[</span>containerId<span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 终止 容器</span>\n<span class=\"token function\">docker</span> container <span class=\"token function\">kill</span> <span class=\"token punctuation\">[</span>containerId<span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 删除 容器</span>\n<span class=\"token function\">docker</span> container <span class=\"token function\">rm</span> <span class=\"token punctuation\">[</span>containerId<span class=\"token punctuation\">]</span>\n</code></pre>\n<h3 id=\"镜像导出导入\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#镜像导出导入\"></a>镜像导出导入</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">### 将本地的镜像导出</span>\n<span class=\"token function\">docker</span> save -o 导出的路径 镜像id/镜像名称:tag\n<span class=\"token comment\">#e.g.</span>\n<span class=\"token function\">docker</span> save -o ./ubuntu.image ubuntu:16.04\n \n<span class=\"token comment\">### 加载本地的镜像文件</span>\n<span class=\"token function\">docker</span> load -i 镜像文件\n<span class=\"token comment\"># e.g.</span>\n<span class=\"token function\">docker</span> load -i ubuntu.image\n</code></pre>\n<h2 id=\"参考\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#参考\"></a>参考</h2>\n<p><a href=\"https://juejin.cn/post/6844903976534540296\">Docker Compose 网络设置 - 掘金 (juejin.cn)</a></p>","noteIndex":{"id":"ua6fcc7oj4utcqkv8dhmcb8","title":"b1babo's note","desc":"","updated":1669076632533,"created":1668950311250,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"dendron-note"},"contentHash":"15dbb1bbcda17b2620bd900a3c14c525","links":[],"anchors":{},"children":["z6zdce798dlnm1qvlbj0147","u92paxy6iqch8vik9v6f4gm"],"parent":null,"data":{},"body":"\nwrite and record something.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"dendron-note"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":true,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableMermaid":true},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://b1babo.github.io","enableBackLinks":true,"assetsPrefix":"/notes","enableHierarchyDisplay":true,"enableMermaid":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}