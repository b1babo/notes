{"pageProps":{"note":{"id":"xjuuqf0xybll9epclbiqy5s","title":"Ctf Docker","desc":"","updated":1672227017469,"created":1672142284036,"custom":{},"fname":"computer.security.ctf.ctf-docker","type":"note","vault":{"fsPath":".","selfContained":true,"name":"dendron-note"},"contentHash":"6862807d1bfaa79bcbedcdc22846024f","links":[],"anchors":{"docker-file":{"type":"header","text":"docker file","value":"docker-file","line":9,"column":0,"depth":2},"run-script":{"type":"header","text":"run script","value":"run-script","line":142,"column":0,"depth":2}},"children":[],"parent":"j5fxwzqd090z5y7p4vbulnd","data":{}},"body":"<h1 id=\"ctf-docker\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ctf-docker\"></a>Ctf Docker</h1>\n<h2 id=\"docker-file\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#docker-file\"></a>docker file</h2>\n<pre class=\"language-docker\"><code class=\"language-docker\"><span class=\"token comment\"># Dockerfile</span>\n<span class=\"token comment\"># FROM phusion/baseimage:master-amd64</span>\n<span class=\"token comment\"># FROM ubuntu:16.04</span>\n<span class=\"token instruction\"><span class=\"token keyword\">FROM</span> ubuntu:20.04</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">ENV</span> DEBIAN_FRONTEND=noninteractive</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">ENV</span> HTTP_PROXY=<span class=\"token string\">\"http://192.168.8.1:10811\"</span></span>\n<span class=\"token comment\"># apt setup</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENV</span> UBUNTU_MIRROR=mirrors.tuna.tsinghua.edu.cn</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span>  sed -i s@/archive.ubuntu.com/@/<span class=\"token variable\">${UBUNTU_MIRROR}</span>/@g /etc/apt/sources.list</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span>  sed -i s@/security.ubuntu.com/@/<span class=\"token variable\">${UBUNTU_MIRROR}</span>/@g /etc/apt/sources.list</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span>  apt-get clean  </span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span>  apt-get update</span>\n\n<span class=\"token comment\"># RUN  apt-get install \\</span>\n<span class=\"token comment\">#         python python3 \\</span>\n<span class=\"token comment\">#         python-pip python3-pip \\</span>\n<span class=\"token comment\">#         python-dev libffi-dev libssl-dev \\</span>\n<span class=\"token comment\">#         vim \\</span>\n<span class=\"token comment\">#         lib32ncurses5 lib32z1 \\</span>\n<span class=\"token comment\">#         ruby gem git \\</span>\n<span class=\"token comment\">#          -y</span>\n\n<span class=\"token comment\"># install some lib using apt</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> dpkg --add-architecture i386 &#x26;&#x26; <span class=\"token operator\">\\</span>\n    apt-get -y update &#x26;&#x26; <span class=\"token operator\">\\</span>\n    apt install -y <span class=\"token operator\">\\</span>\n    libc6:i386 <span class=\"token operator\">\\</span>\n    libc6-dbg:i386 <span class=\"token operator\">\\</span>\n    libc6-dbg <span class=\"token operator\">\\</span>\n    lib32stdc++6 <span class=\"token operator\">\\</span>\n    g++-multilib <span class=\"token operator\">\\</span>\n    cmake <span class=\"token operator\">\\</span>\n    ipython3 <span class=\"token operator\">\\</span>\n    vim <span class=\"token operator\">\\</span>\n    net-tools <span class=\"token operator\">\\</span>\n    iputils-ping <span class=\"token operator\">\\</span>\n    libffi-dev <span class=\"token operator\">\\</span>\n    libssl-dev <span class=\"token operator\">\\</span>\n    python3-dev <span class=\"token operator\">\\</span>\n    python3-pip <span class=\"token operator\">\\</span>\n    build-essential <span class=\"token operator\">\\</span>\n    ruby <span class=\"token operator\">\\</span>\n    ruby-dev <span class=\"token operator\">\\</span>\n    tmux <span class=\"token operator\">\\</span>\n    strace <span class=\"token operator\">\\</span>\n    ltrace <span class=\"token operator\">\\</span>\n    nasm <span class=\"token operator\">\\</span>\n    wget <span class=\"token operator\">\\</span>\n    gdb <span class=\"token operator\">\\</span>\n    gdb-multiarch <span class=\"token operator\">\\</span>\n    netcat <span class=\"token operator\">\\</span>\n    socat <span class=\"token operator\">\\</span>\n    git <span class=\"token operator\">\\</span>\n    patchelf <span class=\"token operator\">\\</span>\n    gawk <span class=\"token operator\">\\</span>\n    file <span class=\"token operator\">\\</span>\n    python3-distutils <span class=\"token operator\">\\</span>\n    bison <span class=\"token operator\">\\</span>\n    rpm2cpio cpio <span class=\"token operator\">\\</span>\n    zstd <span class=\"token operator\">\\</span>\n    tzdata --fix-missing &#x26;&#x26; <span class=\"token operator\">\\</span>\n    rm -rf /var/lib/apt/list/*</span>\n\n<span class=\"token comment\"># timezone</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENV</span> TZ=Asia/Shanghai</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> ln -fs /usr/share/zoneinfo/<span class=\"token variable\">$TZ</span> /etc/localtime &#x26;&#x26; <span class=\"token operator\">\\</span>\n    dpkg-reconfigure -f noninteractive tzdata</span>\n\n\n<span class=\"token comment\"># python setup</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENV</span> PIP_MIRROR=https://pypi.tuna.tsinghua.edu.cn/simple</span>\n\n<span class=\"token comment\"># RUN pip install -i ${PIP_MIRROR} \"pip &#x3C; 21.0\" -U &#x26;&#x26; pip3 install -i ${PIP_MIRROR}  \"pip &#x3C; 21.0\" -U </span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> python3 -m pip install -U pip -i <span class=\"token variable\">${PIP_MIRROR}</span></span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> pip config set global.index-url <span class=\"token variable\">${PIP_MIRROR}</span></span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> python3 -m pip install --no-cache-dir <span class=\"token operator\">\\</span>\n    ropgadget <span class=\"token operator\">\\</span>\n    z3-solver <span class=\"token operator\">\\</span>\n    smmap2 <span class=\"token operator\">\\</span>\n    apscheduler <span class=\"token operator\">\\</span>\n    ropper <span class=\"token operator\">\\</span>\n    unicorn <span class=\"token operator\">\\</span>\n    keystone-engine <span class=\"token operator\">\\</span>\n    capstone <span class=\"token operator\">\\</span>\n    angr <span class=\"token operator\">\\</span>\n    pebble <span class=\"token operator\">\\</span>\n    r2pipe <span class=\"token operator\">\\</span>\n    requests <span class=\"token operator\">\\</span>\n    pwntools</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> gem sources --remove https://rubygems.org/ &#x26;&#x26; <span class=\"token operator\">\\</span>\n    gem sources -a http://gems.ruby-china.com/ &#x26;&#x26; <span class=\"token operator\">\\</span>\n    gem install one_gadget seccomp-tools &#x26;&#x26; <span class=\"token operator\">\\</span>\n    rm -rf /var/lib/gems/2.*/cache/*</span>\n\n\n\n<span class=\"token comment\"># git setup</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENV</span> GIT_HTTP_PROXY=<span class=\"token variable\">${HTTP_PROXY}</span> </span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> git config --global http.proxy <span class=\"token variable\">${GIT_HTTP_PROXY}</span></span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> git clone --depth 1 https://github.com/pwndbg/pwndbg &#x26;&#x26; <span class=\"token operator\">\\</span>\n    cd pwndbg &#x26;&#x26; chmod +x setup.sh &#x26;&#x26; ./setup.sh</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> git clone --depth 1 https://github.com/scwuaptx/Pwngdb.git ~/Pwngdb &#x26;&#x26; <span class=\"token operator\">\\</span>\n    cd ~/Pwngdb &#x26;&#x26; mv .gdbinit .gdbinit-pwngdb &#x26;&#x26; <span class=\"token operator\">\\</span>\n    sed -i <span class=\"token string\">\"s?source ~/peda/peda.py?# source ~/peda/peda.py?g\"</span> .gdbinit-pwngdb &#x26;&#x26; <span class=\"token operator\">\\</span>\n    echo <span class=\"token string\">\"source ~/Pwngdb/.gdbinit-pwngdb\"</span> >> ~/.gdbinit</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> git clone https://github.com/lieanu/LibcSearcher.git &#x26;&#x26; <span class=\"token operator\">\\</span>\n    cd LibcSearcher &#x26;&#x26; <span class=\"token operator\">\\</span>\n    python3 setup.py develop</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> echo http_proxy=<span class=\"token variable\">${HTTP_PROXY}</span>  >> ~/.bashrc </span>\n\n\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> git clone --depth 1 https://github.com/niklasb/libc-database.git libc-database &#x26;&#x26; <span class=\"token operator\">\\</span>\n    cd libc-database &#x26;&#x26; ./get ubuntu debian || echo <span class=\"token string\">\"/libc-database/\"</span> > ~/.libcdb_path &#x26;&#x26; <span class=\"token operator\">\\</span>\n    rm -rf /tmp/*</span>\n\n<span class=\"token comment\"># wget </span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> http_proxy=<span class=\"token variable\">${HTTP_PROXY}</span>  wget -O ~/.gdbinit-gef.py -q http://gef.blah.cat/py</span>\n\n\n\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> mkdir /root/workspace</span>\n\n</code></pre>\n<h2 id=\"run-script\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#run-script\"></a>run script</h2>\n<pre class=\"language-sh\"><code class=\"language-sh\">#!/bin/bash\n\n# ctf-docker.sh\nOWNERNAME=\"b1babo\"\nIMAGENAME=\"ctf-docker\"\nTAGNAME=\"v.1.0\"\nCONTAINERNAME=\"ctf\"\nPORTSTRING=\"\"\nif [ \"${PORTFWD}\" = \"\" ]\nthen\n   PORTFWD=\"20080:80,20443:443,28080:8080,24433:4433,9999:9999\"\nfi\nPORTFWD=$(echo ${PORTFWD} | tr -cd [0-9,:])\nIFS=',' read -ra PORTLIST &#x3C;&#x3C;&#x3C; \"${PORTFWD}\"\nfor PORTPAIR in \"${PORTLIST[@]}\"\ndo\n   SPORT=$(echo ${PORTPAIR} | cut -d':' -f1)\n   PORTSTRING=\"${PORTSTRING} -p ${SPORT}:${SPORT}\"\ndone\n\n\n\n\nfunction build_image(){\n    echo [+] building $OWNERNAME/$IMAGENAME:$TAGNAME\n    DOCKER_BUILDKIT=1 docker build -t $OWNERNAME/$IMAGENAME:$TAGNAME -f Dockerfile .\n}\n\nfunction run_docker(){\n    echo [+] runing $OWNERNAME/$IMAGENAME:$TAGNAME ${PORTSTRING}\n    docker run -it  ${PORTSTRING} --name $CONTAINERNAME --mount \"type=bind,src=$(pwd)/workspace,dst=/root/workspace\" $OWNERNAME/$IMAGENAME:$TAGNAME \n        -e PORTFWD=\"${PORTFWD}\" \\\n        # --rm \\\n        --cap-add=NET_ADMIN \\\n        --cap-add=SYS_ADMIN \\\n        --security-opt apparmor=unconfined \\\n        --device=/dev/net/tun \\\n        --network=host \\\n        \n}\n\nfunction rm_image(){\n    docker container rm $IMAGENAME\n}\n\n\n# Handle arguments\nfunction show_help {\n    echo \"Usage: $0 [-b] [-r]\"\n    echo \"-b - build ctf docker image\"\n    echo \"-r - run ctf docker\"\n}\n\n\nif [[ $# &#x3C; 1 ]]; then\n    show_help\n    exit 1\nfi\n\n\n# 选项后面的冒号表示需要参数\nwhile getopts \"brh\" optname\ndo\n    case \"$optname\" in\n      \"b\")\n        build_image\n        ;;\n      \"r\")\n        run_docker \n        ;;\n      \"h\")\n        echo \"Usage: $0 [-b] [-r]\"\n        ;;\n      *)\n        echo \"Unknown options\"\n        ;;\n    esac\n    #echo \"option index is $OPTIND\"\ndone\n\n</code></pre>","noteIndex":{"id":"ua6fcc7oj4utcqkv8dhmcb8","title":"b1babo's note","desc":"","updated":1669076632533,"created":1668950311250,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"dendron-note"},"contentHash":"15dbb1bbcda17b2620bd900a3c14c525","links":[],"anchors":{},"children":["z6zdce798dlnm1qvlbj0147","u92paxy6iqch8vik9v6f4gm"],"parent":null,"data":{},"body":"\nwrite and record something.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"dendron-note"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":true,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableMermaid":true},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://b1babo.github.io","enableBackLinks":true,"assetsPrefix":"/notes","enableHierarchyDisplay":true,"enableMermaid":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}